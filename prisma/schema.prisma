generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int      @id @default(autoincrement())
  email        String   @unique
  name         String
  passwordHash String
  role         String?  @default("user")
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  // ðŸ”½ ì¶”ê°€ (ì–‘ë°©í–¥ ê´€ê³„ ì„ ì–¸)
  refreshTokens      RefreshToken[]
  emailVerifications EmailVerification[]
  passwordResets     PasswordReset[]
}

model RefreshToken {
  id         Int       @id @default(autoincrement())
  userId     Int
  token      String    @unique
  revokedAt  DateTime?
  replacedBy Int?
  expiresAt  DateTime
  user       User      @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model EmailVerification {
  id        Int       @id @default(autoincrement())
  userId    Int
  token     String    @unique
  expiresAt DateTime
  usedAt    DateTime?
  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model PasswordReset {
  id        Int       @id @default(autoincrement())
  userId    Int
  token     String    @unique
  expiresAt DateTime
  usedAt    DateTime?
  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}
